# KDE tags expanded automatically by am_edit - $Revision: 1.1 $ 
# Makefile.in generated by automake 1.7.6 from Makefile.am.
# gad/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/gad
pkglibdir = $(libdir)/gad
pkgincludedir = $(includedir)/gad
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/ginstall -c -p
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/pahl/project/gad/admin/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/pahl/project/gad/admin/missing --run tar
AUTOCONF = ${SHELL} /home/pahl/project/gad/admin/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pahl/project/gad/admin/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pahl/project/gad/admin/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2  
CPP = cpp
CPPFLAGS =  -DPIC -fPIC -DQT_THREAD_SUPPORT  -D_REENTRANT
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -O0 -g3 -Wall -DQT_THREAD_SUPPORT -fno-exceptions -fno-check-new
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GMSGFMT = /usr/bin/msgfmt
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KDE_CXXFLAGS = 
KDE_MT_LDFLAGS =  -DPIC -fPIC -lpthread
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
LDFLAGS = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBRESOLV = -lresolv
LIBS = 
LIBSM = -lSM -lICE
LIBSOCKET =  -lresolv
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTIL = -lutil
LIBXINERAMA = 
LIBZ = -lz
LIB_QT = -lqt-mt $(LIBPNG) $(LIBJPEG) -lXext $(LIB_X11) $(LIBSM)
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pahl/project/gad/admin/missing --run makeinfo
MOC = /project/geoaida/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CXXFLAGS =  -g3 -Wall -DQT_THREAD_SUPPORT -fno-exceptions -fno-check-new
NOREPO = -fno-repo
OBJEXT = o
PACKAGE = gad
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
QTE_NORTTI = 
QT_INCLUDES = -I/project/geoaida/include
QT_LDFLAGS = -L/project/geoaida/lib
RANLIB = ranlib
REPO = -frepo
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TOPSUBDIRS =  gad
UIC = /project/geoaida/bin/uic
UIC_TR = QT_KDE_I18N
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS =  -DPIC -fPIC
VERSION = 0.1
XGETTEXT = /usr/bin/xgettext
X_EXTRA_LIBS =  -lresolv
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
all_includes = -I/project/geoaida/include -I/usr/X11R6/include
all_libraries = -L/usr/X11R6/lib -L/project/geoaida/lib  -DPIC -fPIC -lpthread
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/pahl/project/gad/admin/install-sh
kde_qtver = 3
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /project/geoaida
program_transform_name = s,x,x,
qt_includes = /project/geoaida/include
qt_libraries = /project/geoaida/lib
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

####### kdevelop will overwrite this part!!! (begin)##########
bin_PROGRAMS = gad

gad_SOURCES = GadBool.cpp WildcardReplace.cpp MainGui.cpp main.cpp GadWorkspace.cpp GadText.cpp GadProcess.cpp GadObject.cpp GadModule.cpp GadIO.cpp GadGuiObjectTable.cpp GadGui.cpp GadEnum.cpp ClassDict.cpp 
SOURCES = GadBool.cpp WildcardReplace.cpp MainGui.cpp main.cpp GadWorkspace.cpp GadText.cpp GadProcess.cpp GadObject.cpp GadModule.cpp GadIO.cpp GadGuiObjectTable.cpp GadGui.cpp GadEnum.cpp ClassDict.cpp 
INTERFACES = 
TRANSLATIONS = 
KDE_OPTIONS = qtonly
gad_LDADD = -lqtgui -lqtparser -lqt-mt -lXext -lX11 $(LIBSOCKET)

EXTRA_DIST = ClassDict.cpp ClassDict.h GadEnum.cpp GadEnum.h GadGui.cpp GadGui.h GadGuiObjectTable.cpp GadIO.cpp GadIO.h GadModule.cpp GadModule.h GadObject.cpp GadObject.h GadProcess.cpp GadProcess.h GadText.cpp GadText.h GadWorkspace.cpp GadWorkspace.h main.cpp MainGui.cpp MainGui.h WildcardReplace.cpp WildcardReplace.h gad.app GadBool.h GadBool.cpp 

####### kdevelop will overwrite this part!!! (end)############

# set the include path for X, qt and KDE
INCLUDES = -DPRGDIR=\"/project/geoaida/\" -DTMPDIR=\"/project/geoaida/tmp/\" $(all_includes)

#>- gad_METASOURCES = AUTO

# the library search path. 
gad_LDFLAGS = $(all_libraries) 

# them while "make clean", use CLEANFILES
DISTCLEANFILES = $(gad_METASOURCES)
subdir = gad
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = gad$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_gad_OBJECTS = GadBool.$(OBJEXT) WildcardReplace.$(OBJEXT) \
	MainGui.$(OBJEXT) main.$(OBJEXT) GadWorkspace.$(OBJEXT) \
	GadText.$(OBJEXT) GadProcess.$(OBJEXT) GadObject.$(OBJEXT) \
	GadModule.$(OBJEXT) GadIO.$(OBJEXT) GadGuiObjectTable.$(OBJEXT) \
	GadGui.$(OBJEXT) GadEnum.$(OBJEXT) ClassDict.$(OBJEXT)
#>- gad_OBJECTS = $(am_gad_OBJECTS)
#>+ 8
gad_final_OBJECTS = gad.all_cpp.o 
gad_nofinal_OBJECTS = GadBool.$(OBJEXT) WildcardReplace.$(OBJEXT) \
	MainGui.$(OBJEXT) main.$(OBJEXT) GadWorkspace.$(OBJEXT) \
	GadText.$(OBJEXT) GadProcess.$(OBJEXT) GadObject.$(OBJEXT) \
	GadModule.$(OBJEXT) GadIO.$(OBJEXT) GadGuiObjectTable.$(OBJEXT) \
	GadGui.$(OBJEXT) GadEnum.$(OBJEXT) ClassDict.$(OBJEXT)
gad_OBJECTS = $(gad_nofinal_OBJECTS)
#gad_OBJECTS = $(gad_final_OBJECTS)
gad_DEPENDENCIES =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ClassDict.Po ./$(DEPDIR)/GadBool.Po \
	./$(DEPDIR)/GadEnum.Po ./$(DEPDIR)/GadGui.Po \
	./$(DEPDIR)/GadGuiObjectTable.Po \
	./$(DEPDIR)/GadIO.Po ./$(DEPDIR)/GadModule.Po \
	./$(DEPDIR)/GadObject.Po ./$(DEPDIR)/GadProcess.Po \
	./$(DEPDIR)/GadText.Po ./$(DEPDIR)/GadWorkspace.Po \
	./$(DEPDIR)/MainGui.Po \
	./$(DEPDIR)/WildcardReplace.Po ./$(DEPDIR)/main.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(gad_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = GadBool.cpp WildcardReplace.cpp MainGui.cpp main.cpp GadWorkspace.cpp GadText.cpp GadProcess.cpp GadObject.cpp GadModule.cpp GadIO.cpp GadGuiObjectTable.cpp GadGui.cpp GadEnum.cpp ClassDict.cpp 

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  gad/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gad/Makefile
	cd $(top_srcdir) && perl admin/am_edit gad/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gad$(EXEEXT): $(gad_OBJECTS) $(gad_DEPENDENCIES) 
	@rm -f gad$(EXEEXT)
	$(CXXLINK) $(gad_LDFLAGS) $(gad_OBJECTS) $(gad_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ClassDict.Po
include ./$(DEPDIR)/GadBool.Po
include ./$(DEPDIR)/GadEnum.Po
include ./$(DEPDIR)/GadGui.Po
include ./$(DEPDIR)/GadGuiObjectTable.Po
include ./$(DEPDIR)/GadIO.Po
include ./$(DEPDIR)/GadModule.Po
include ./$(DEPDIR)/GadObject.Po
include ./$(DEPDIR)/GadProcess.Po
include ./$(DEPDIR)/GadText.Po
include ./$(DEPDIR)/GadWorkspace.Po
include ./$(DEPDIR)/MainGui.Po
include ./$(DEPDIR)/WildcardReplace.Po
include ./$(DEPDIR)/main.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=rmk.ppm gad 

DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-data-local

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-local install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-local


install-data-local:
#>- 	$(mkinstalldirs) $(prefix)/share/data/application/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(prefix)/share/data/application/
#>- 	$(INSTALL_DATA) $(srcdir)/gad.app $(prefix)/share/data/application/gad.app
#>+ 1
	$(INSTALL_DATA) $(srcdir)/gad.app $(DESTDIR)$(prefix)/share/data/application/gad.app

uninstall-local:
#>- 	-rm -f $(prefix)/share/data/application/gad.app
#>+ 1
	-rm -f $(DESTDIR)$(prefix)/share/data/application/gad.app
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
GadBool.moc: $(srcdir)/GadBool.h
	$(MOC) $(srcdir)/GadBool.h -o GadBool.moc

#>+ 3
GadObject.moc: $(srcdir)/GadObject.h
	$(MOC) $(srcdir)/GadObject.h -o GadObject.moc

#>+ 3
GadProcess.moc: $(srcdir)/GadProcess.h
	$(MOC) $(srcdir)/GadProcess.h -o GadProcess.moc

#>+ 3
GadIO.moc: $(srcdir)/GadIO.h
	$(MOC) $(srcdir)/GadIO.h -o GadIO.moc

#>+ 3
GadWorkspace.moc: $(srcdir)/GadWorkspace.h
	$(MOC) $(srcdir)/GadWorkspace.h -o GadWorkspace.moc

#>+ 3
GadEnum.moc: $(srcdir)/GadEnum.h
	$(MOC) $(srcdir)/GadEnum.h -o GadEnum.moc

#>+ 3
GadGui.moc: $(srcdir)/GadGui.h
	$(MOC) $(srcdir)/GadGui.h -o GadGui.moc

#>+ 3
GadText.moc: $(srcdir)/GadText.h
	$(MOC) $(srcdir)/GadText.h -o GadText.moc

#>+ 3
GadModule.moc: $(srcdir)/GadModule.h
	$(MOC) $(srcdir)/GadModule.h -o GadModule.moc

#>+ 3
MainGui.moc: $(srcdir)/MainGui.h
	$(MOC) $(srcdir)/MainGui.h -o MainGui.moc

#>+ 3
clean-metasources:
	-rm -f  GadBool.moc GadObject.moc GadProcess.moc GadIO.moc GadWorkspace.moc GadEnum.moc GadGui.moc GadText.moc GadModule.moc MainGui.moc

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gad/Makefile
	cd $(top_srcdir) && perl admin/am_edit gad/Makefile.in


#>+ 11
gad.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/GadBool.cpp $(srcdir)/WildcardReplace.cpp $(srcdir)/MainGui.cpp $(srcdir)/main.cpp $(srcdir)/GadWorkspace.cpp $(srcdir)/GadText.cpp $(srcdir)/GadProcess.cpp $(srcdir)/GadObject.cpp $(srcdir)/GadModule.cpp $(srcdir)/GadIO.cpp $(srcdir)/GadGuiObjectTable.cpp $(srcdir)/GadGui.cpp $(srcdir)/GadEnum.cpp $(srcdir)/ClassDict.cpp   GadBool.moc GadObject.moc GadProcess.moc GadIO.moc GadWorkspace.moc GadEnum.moc GadGui.moc GadText.moc GadModule.moc MainGui.moc 
	@echo 'creating gad.all_cpp.cpp ...'; \
	rm -f gad.all_cpp.files gad.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> gad.all_cpp.final; \
	for file in GadBool.cpp WildcardReplace.cpp MainGui.cpp main.cpp GadWorkspace.cpp GadText.cpp GadProcess.cpp GadObject.cpp GadModule.cpp GadIO.cpp GadGuiObjectTable.cpp GadGui.cpp GadEnum.cpp ClassDict.cpp ; do \
	  echo "#include \"$$file\"" >> gad.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> gad.all_cpp.final; \
	done; \
	cat gad.all_cpp.final gad.all_cpp.files  > gad.all_cpp.cpp; \
	rm -f gad.all_cpp.final gad.all_cpp.files

#>+ 3
clean-final:
	-rm -f gad.all_cpp.cpp

#>+ 2
final:
	$(MAKE) gad_OBJECTS="$(gad_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) gad_OBJECTS="$(gad_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) gad_OBJECTS="$(gad_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) gad_OBJECTS="$(gad_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 11
$(srcdir)/GadObject.cpp: GadObject.moc 
$(srcdir)/GadBool.cpp: GadBool.moc 
$(srcdir)/GadIO.cpp: GadIO.moc 
$(srcdir)/GadText.cpp: GadText.moc 
$(srcdir)/GadEnum.cpp: GadEnum.moc 
$(srcdir)/MainGui.cpp: MainGui.moc 
$(srcdir)/GadGui.cpp: GadGui.moc 
$(srcdir)/GadModule.cpp: GadModule.moc 
$(srcdir)/GadWorkspace.cpp: GadWorkspace.moc 
$(srcdir)/GadProcess.cpp: GadProcess.moc 
